public class Solution {
    public IList<IList<int>> Permute(int[] nums) {
        IList<IList<int>> list = new List<IList<int>>();
        PermuteRec(list, nums, 0);
        return list;
    }
    public static void PermuteRec(IList<IList<int>> list, int[] nums, int index){
        if (index == nums.Count() - 1){
            list.Add(new List<int>(nums));
        }
        else{
            for (int i = index; i < nums.Count(); i++){
                Swap(nums, index,i);
                PermuteRec(list, nums, index+1);
                Swap(nums, index,i);
            }
        }
    }
    public static void Swap(int[] nums, int i, int j){
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
